/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quan_ly_sinh_vien;
import java.util.LinkedList;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import static quan_ly_sinh_vien.User.DocFile;
import static quan_ly_sinh_vien.User.GhiFile;
import static quan_ly_sinh_vien.User.KTraPass;
import static quan_ly_sinh_vien.User.Usernameexists;
import static quan_ly_sinh_vien.User.kiemTraEmailHopLe;
import static quan_ly_sinh_vien.User.kiemTraMatKhauHopLe;

/**
 *
 * @author MAN NGHI
 */
public class DangKy extends javax.swing.JFrame {

    /**
     * Creates new form DangKy
     */
    public DangKy() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bnDangKy = new javax.swing.JButton();
        txtuser1 = new javax.swing.JTextField();
        txtpass1 = new javax.swing.JPasswordField();
        txtpass2 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bnDangNhap = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        bnhienpass = new javax.swing.JButton();
        anhnen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 51));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("ĐĂNG KÝ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, -1, -1));

        bnDangKy.setBackground(new java.awt.Color(204, 204, 255));
        bnDangKy.setText("Đăng Ký");
        bnDangKy.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 255), null));
        bnDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnDangKyActionPerformed(evt);
            }
        });
        getContentPane().add(bnDangKy, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 238, 60, 20));

        txtuser1.setForeground(new java.awt.Color(0, 153, 204));
        txtuser1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), null));
        txtuser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtuser1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtuser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 91, 187, -1));

        txtpass1.setForeground(new java.awt.Color(0, 153, 204));
        txtpass1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), null));
        txtpass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpass1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtpass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 158, 187, -1));

        txtpass2.setForeground(new java.awt.Color(0, 153, 204));
        txtpass2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), null));
        txtpass2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpass2ActionPerformed(evt);
            }
        });
        getContentPane().add(txtpass2, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 186, 187, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 204));
        jLabel2.setText("Tên User :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 97, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 204));
        jLabel3.setText("Pass :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 161, 37, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 204));
        jLabel4.setText("Xác Nhận Pass :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 189, -1, -1));

        bnDangNhap.setBackground(new java.awt.Color(204, 204, 255));
        bnDangNhap.setText("Đăng Nhập");
        bnDangNhap.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 255, 255), null));
        bnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnDangNhapActionPerformed(evt);
            }
        });
        getContentPane().add(bnDangNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 238, 70, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 204));
        jLabel5.setText("Email :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 128, 40, -1));

        txtemail.setForeground(new java.awt.Color(0, 153, 204));
        txtemail.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), null));
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 125, 187, -1));

        bnhienpass.setBackground(new java.awt.Color(204, 204, 255));
        bnhienpass.setText("Hiện Pass");
        bnhienpass.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 255), null));
        bnhienpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnhienpassActionPerformed(evt);
            }
        });
        getContentPane().add(bnhienpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 238, 70, 20));

        anhnen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/hinh-nen-full-hd-1920x1080-cho-may-tinh-012.jpg"))); // NOI18N
        getContentPane().add(anhnen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bnDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnDangKyActionPerformed
        LinkedList<User> l = new LinkedList<User>();
    DocFile(l);
    String user1 = txtuser1.getText();
    String email1 = txtemail.getText();
    String pass1 = new String(txtpass1.getPassword());
    String pass2 = new String(txtpass2.getPassword());

    StringBuilder sb = new StringBuilder();
    if (user1.equals("") || pass1.equals("") || pass2.equals("")) {
        JOptionPane.showMessageDialog(this, "Không được để trống trường nào!");
    } else if (KTraPass(pass1, pass2)) {
        JOptionPane.showMessageDialog(this, "Pass và xác nhận pass phải giống nhau!");
        txtpass1.setText("");
        txtpass2.setText("");
    } else if (Usernameexists(l, user1)) {
        JOptionPane.showMessageDialog(this, "Tài Khoản đã tồn tại!");
    } else if (!kiemTraMatKhauHopLe(pass1)) {
        // Kiểm tra tính hợp lệ của mật khẩu
        // Nếu mật khẩu không hợp lệ, hiển thị thông báo và xóa trắng các trường mật khẩu
        JOptionPane.showMessageDialog(this, "Mật khẩu không hợp lệ!");
        txtpass1.setText("");
        txtpass2.setText("");
    } else if (!kiemTraEmailHopLe(email1)){
        JOptionPane.showMessageDialog(this, "email không hợp lệ!");
        txtemail.setText("");
        txtemail.requestFocusInWindow();
    }else {
        // Thêm user mới vào danh sách và ghi vào tệp tin
        l.addLast(new User(user1, pass1, email1)); // Thêm tham số email vào đây
        GhiFile(l);
        JOptionPane.showMessageDialog(this, "Đăng ký thành công!");
        // Sau khi đăng ký thành công, xóa sạch các trường nhập
        txtuser1.setText("");
        txtemail.setText("");
        txtpass1.setText("");
        txtpass2.setText("");
    }
    }//GEN-LAST:event_bnDangKyActionPerformed

    private void txtpass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpass1ActionPerformed
        // TODO add your handling code here:
        txtpass2.requestFocusInWindow();
    }//GEN-LAST:event_txtpass1ActionPerformed

    private void txtuser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtuser1ActionPerformed
        // TODO add your handling code here:
        txtemail.requestFocusInWindow();
    }//GEN-LAST:event_txtuser1ActionPerformed

    private void txtpass2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpass2ActionPerformed
        // TODO add your handling code here:
        // Kiểm tra xem các trường đã được điền đầy đủ chưa
        boolean allFieldsFilled = !txtuser1.getText().isEmpty() && !new String(txtpass1.getPassword()).isEmpty() && !new String(txtpass2.getPassword()).isEmpty();

        // Nếu có trường chưa điền, di chuyển đến trường đó và hiển thị thông báo lỗi
        if (!allFieldsFilled) {
            if (txtuser1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tên người dùng!");
                txtuser1.requestFocusInWindow();
            } else if (new String(txtpass1.getPassword()).isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu!");
                txtpass1.requestFocusInWindow();
            } else if (new String(txtpass2.getPassword()).isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập xác nhận mật khẩu!");
                txtpass2.requestFocusInWindow();
            }
        } else {
            // Nếu tất cả các trường đã được điền đầy đủ, thực hiện hành động cho nút Đăng ký
            bnDangKy.doClick();
        }
    }//GEN-LAST:event_txtpass2ActionPerformed

    private void bnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnDangNhapActionPerformed
        // TODO add your handling code here:
        this.dispose();
        DangNhap dn = new DangNhap();
        dn.setVisible(true);
    }//GEN-LAST:event_bnDangNhapActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
        txtpass1.requestFocusInWindow();
    }//GEN-LAST:event_txtemailActionPerformed

    private boolean DaHienThi = false;
    private void bnhienpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnhienpassActionPerformed
        // TODO add your handling code here:
        // Đảo ngược trạng thái của biến boolean
        DaHienThi = !DaHienThi;
        // Hiển thị hoặc ẩn mật khẩu dựa trên trạng thái của biến
        if (DaHienThi) {
            txtpass1.setEchoChar((char) 0); // Hiển thị mật khẩu
            txtpass2.setEchoChar((char) 0);
        } else {
            txtpass1.setEchoChar('*'); // Ẩn mật khẩu
            txtpass2.setEchoChar('*');
        }
    }//GEN-LAST:event_bnhienpassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DangKy dangKyForm = new DangKy();
                dangKyForm.setLocationRelativeTo(null); // Hiển thị JFrame ở giữa màn hình
                dangKyForm.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel anhnen;
    private javax.swing.JButton bnDangKy;
    private javax.swing.JButton bnDangNhap;
    private javax.swing.JButton bnhienpass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtemail;
    private javax.swing.JPasswordField txtpass1;
    private javax.swing.JPasswordField txtpass2;
    private javax.swing.JTextField txtuser1;
    // End of variables declaration//GEN-END:variables
}

class User {

    private String userName;
    private String passWord;
    private String email;

    public String getEmail(){
        return email;
    }
    public void setEmail(String email){
        this.email = email;
    }
    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getPassWord() {
        return passWord;
    }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
    }

    public User(String userName, String passWord, String email) {
        this.userName = userName;
        this.passWord = passWord;
        this.email = email;
    }

    static boolean Usernameexists(LinkedList<User> l, String username) {
        for (User user : l) {
            if (user.getUserName().equals(username)) {
                return true;
            }
        }
        return false;
    }

    static void GhiFile(LinkedList<User> l) {
        try {
            FileWriter fw = new FileWriter("File.txt", true);
            BufferedWriter bw = new BufferedWriter(fw);
            for (User user : l) {
                bw.write(user.getUserName() + "-" + user.getPassWord() + "-" + user.getEmail());
                bw.newLine(); // Để chuyển dòng sau mỗi cặp UserName và PassWord
            }
            bw.close();
            fw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    static void DocFile(LinkedList<User> l) {
        try {
            FileReader fr = new FileReader("File.txt");
            BufferedReader br = new BufferedReader(fr);
            String line;
            while ((line = br.readLine()) != null) {
                String[] t = line.split("-");
                if (t.length >= 3) {
                    l.addLast(new User(t[0], t[1], t[2]));
                } else {
                    // Xử lý khi mảng t không đủ phần tử
                }
            }
            fr.close();
            br.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    static boolean KTraPass(String pass1, String pass2) {
        if (pass1.equals(pass2)) {
            return false;
        }
        return true;
    }

    static boolean kiemTraMatKhauHopLe(String password) {
        // Kiểm tra độ dài của mật khẩu
        if (password.length() < 8) {
            JOptionPane.showMessageDialog(null, "Mật khẩu quá ngắn (ít nhất 8 ký tự)!");
            return false;
        }

        // Kiểm tra chữ thường
        Pattern lowercasePattern = Pattern.compile("[a-z]");
        Matcher lowercaseMatcher = lowercasePattern.matcher(password);
        if (!lowercaseMatcher.find()) {
            JOptionPane.showMessageDialog(null, "Mật khẩu phải chứa ít nhất một chữ thường!");
            return false;
        }

        // Kiểm tra chữ hoa
        Pattern uppercasePattern = Pattern.compile("[A-Z]");
        Matcher uppercaseMatcher = uppercasePattern.matcher(password);
        if (!uppercaseMatcher.find()) {
            JOptionPane.showMessageDialog(null, "Mật khẩu phải chứa ít nhất một chữ hoa!");
            return false;
        }

        // Kiểm tra số
        Pattern digitPattern = Pattern.compile("[0-9]");
        Matcher digitMatcher = digitPattern.matcher(password);
        if (!digitMatcher.find()) {
            JOptionPane.showMessageDialog(null, "Mật khẩu phải chứa ít nhất một số!");
            return false;
        }

        // Kiểm tra kí tự đặc biệt
        Pattern specialCharPattern = Pattern.compile("[!@#$%^&*()\\-_=+\\|\\[{\\]};:'\",<.>/?]");
        Matcher specialCharMatcher = specialCharPattern.matcher(password);
        if (!specialCharMatcher.find()) {
            JOptionPane.showMessageDialog(null, "Mật khẩu phải chứa ít nhất một kí tự đặc biệt!");
            return false;
        }

        return true;
    }
    static boolean kiemTraEmailHopLe(String email) {
        return email.contains("@");
    }
}
